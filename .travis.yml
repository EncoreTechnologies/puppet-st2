---
sudo: required
dist: trusty
services: docker

branches:
  except:
  - gh-pages

language: ruby
bundler_args: --without rake

# TODO install modules as part of kitchen build (using librarian puppet
#install:
#  - if [[ -n $DISTRO ]]; then r10k puppetfile install -v --moduledir=/tmp/modules --puppetfile=docs/Puppetfile; else echo "Not running r10k because DISTRO is not set"; fi

# execute all commands in a single script with 'set -e' at the top
# otherwise if you specify >1 command here, travis will try to run them
# all and if one fails it will ignore the failure and go onto the next
script:
  - script/ci_docker_unit.sh
  # TODO enable kitchen
  #- if [[ -n $DISTRO ]]; then kitchen test ${DISTRO}; else echo "Not running kitchenci because DISTRO is not set"; fi


matrix:
  fast_finish: true
  include:
    - rvm: 2.4
      gemfile: build/kitchen/Gemfile
      env:
        - BUILD_NAME="RHEL/CentOS 6"
        - TEST_NAME="centos6"
    - rvm: 2.4
      gemfile: build/kitchen/Gemfile
      env:
        - BUILD_NAME="RHEL/CentOS 7"
        - TEST_NAME="centos7"
    - rvm: 2.4
      gemfile: build/kitchen/Gemfile
      env:
        - BUILD_NAME="Ubuntu 14"
        - TEST_NAME="ubuntu14"
    - rvm: 2.4
      gemfile: build/kitchen/Gemfile
      env:
        - BUILD_NAME="Ubuntu 16"
        - TEST_NAME="ubuntu16"
    - rvm: 2.4
      gemfile: build/kitchen/Gemfile
      env:
        - BUILD_NAME="Puppet 4 (generic)"
        - TEST_NAME="puppet4"
    - rvm: 2.4
      gemfile: build/kitchen/Gemfile
      env:
        - BUILD_NAME="Puppet 5 (generic)"
        - TEST_NAME="puppet5"

# Note: disabling notifications during initial kitchen ci testing
# notifications:
#   # Post build failures to '#puppet' channel in 'stackstorm-community' Slack
#   slack:
#     rooms:
#       - secure: SJ0wpsrrq7oYeepFawJs2iSuKLpWr6aoyWgP+fTPLq8tcZGuIUKJSLM+1FZddYE08QvykO1E0jyeqBrTyvFc7EwsW6vD5bpFYGtVMSMJJIgk76UEhmXbqtTJTjfjYT7/7RDnWlEGXXS7icIZSkEP1moz34fXEDbXKzCpFtqZkAo=
#     on_pull_requests: false
#     on_success: change # default: always
#     on_failure: always # default: always
